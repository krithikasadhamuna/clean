# CodeGrey AI SOC Platform - Enhanced Client Configuration with Docker Support
# This configuration enables all container-based attack simulation capabilities

client:
  agent_id: auto
  server_endpoint: http://backend.codegrey.ai:8080
  api_key: ""
  reconnect_interval: 30
  heartbeat_interval: 60

log_forwarding:
  enabled: true
  batch_size: 100
  flush_interval: 30
  compression: true
  sources:
  - windows_events
  - process_monitor
  - network_monitor
  - file_monitor
  - container_logs

log_sources:
  system_logs:
    enabled: true
    priority: "high"
  security_logs:
    enabled: true
    priority: "critical"
  application_logs:
    enabled: true
    priority: "medium"
  attack_logs:
    enabled: true
    priority: "critical"
  container_logs:
    enabled: true
    priority: "high"

windows:
  event_logs:
    - "Security"
    - "System" 
    - "Application"
    - "Microsoft-Windows-Sysmon/Operational"
    - "Microsoft-Windows-PowerShell/Operational"
    - "Microsoft-Windows-Windows Defender/Operational"
  wmi_enabled: true

command_execution:
  enabled: true
  allowed_commands:
  - powershell
  - cmd
  - docker
  - bash
  timeout: 300

# Enhanced container management with full capabilities
containers:
  enabled: true
  docker_required: true
  max_containers: 10
  auto_cleanup: true
  cleanup_after_hours: 24
  preserve_golden_images: true
  log_forwarding: true
  
  # Container templates for different attack scenarios
  templates:
    windows_endpoint:
      image: "mcr.microsoft.com/windows/servercore:ltsc2019"
      platform: "windows"
      memory_limit: "2g"
      cpu_limit: "1.0"
      tools: ["powershell", "cmd", "net", "reg"]
      logs: ["windows_events", "powershell_logs"]
      
    linux_server:
      image: "ubuntu:22.04"
      platform: "linux"
      memory_limit: "1g"
      cpu_limit: "0.5"
      tools: ["bash", "python3", "curl", "wget", "nmap"]
      logs: ["syslog", "auth_log", "audit_log"]
      
    web_application:
      image: "nginx:alpine"
      platform: "linux"
      memory_limit: "512m"
      cpu_limit: "0.3"
      tools: ["curl", "sqlmap", "nikto", "gobuster"]
      logs: ["access_log", "error_log"]
      
    database_server:
      image: "mysql:8.0"
      platform: "linux"
      memory_limit: "1g"
      cpu_limit: "0.5"
      tools: ["mysql", "mysqldump", "sqlmap"]
      logs: ["mysql_logs", "audit_logs"]
      
    domain_controller:
      image: "phantomstrike/windows-dc:latest"
      platform: "windows"
      memory_limit: "4g"
      cpu_limit: "2.0"
      tools: ["powershell", "dsquery", "ldifde", "ntdsutil"]
      logs: ["domain_logs", "dns_logs", "kerberos_logs"]

# Container attack execution settings
container_attack_execution:
  enabled: true
  max_concurrent_attacks: 5
  attack_timeout_minutes: 30
  preserve_attack_containers: false
  create_golden_images: true
  log_all_attacks: true
  
  # MITRE ATT&CK technique execution
  techniques:
    T1059:  # Command and Scripting Interpreter
      enabled: true
      containers: ["linux_server", "windows_endpoint"]
    T1055:  # Process Injection
      enabled: true
      containers: ["windows_endpoint"]
    T1003:  # OS Credential Dumping
      enabled: true
      containers: ["windows_endpoint", "linux_server"]
    T1021:  # Remote Services
      enabled: true
      containers: ["linux_server", "windows_endpoint"]
    T1082:  # System Information Discovery
      enabled: true
      containers: ["linux_server", "windows_endpoint"]
    T1083:  # File and Directory Discovery
      enabled: true
      containers: ["linux_server", "windows_endpoint"]
    T1057:  # Process Discovery
      enabled: true
      containers: ["linux_server", "windows_endpoint"]
    T1016:  # System Network Configuration Discovery
      enabled: true
      containers: ["linux_server", "windows_endpoint"]
    T1018:  # Remote System Discovery
      enabled: true
      containers: ["linux_server", "windows_endpoint"]
    T1190:  # Exploit Public-Facing Application
      enabled: true
      containers: ["web_application"]
    T1566:  # Phishing
      enabled: true
      containers: ["web_application", "linux_server"]

# Golden image management
golden_images:
  enabled: true
  storage_path: "./golden_images"
  max_images: 50
  auto_cleanup: true
  cleanup_after_days: 30
  
  # Pre-built golden images
  prebuilt_images:
    - name: "clean-windows-10"
      description: "Clean Windows 10 environment"
      image: "mcr.microsoft.com/windows/servercore:ltsc2019"
    - name: "clean-ubuntu-22"
      description: "Clean Ubuntu 22.04 environment"
      image: "ubuntu:22.04"
    - name: "web-server-nginx"
      description: "Nginx web server"
      image: "nginx:alpine"
    - name: "database-mysql"
      description: "MySQL database server"
      image: "mysql:8.0"

# Container networking
container_networking:
  enabled: true
  network_mode: "bridge"
  create_isolated_networks: true
  allow_host_network: false
  port_mapping: true
  dns_servers: ["8.8.8.8", "1.1.1.1"]

# Container security
container_security:
  enabled: true
  read_only_root_filesystem: false
  no_new_privileges: true
  drop_capabilities: true
  security_opt: ["no-new-privileges:true"]
  user: "1000:1000"  # Non-root user
  
# Performance settings
performance:
  max_memory_mb: 2048
  max_cpu_percent: 50
  queue_size: 10000
  container_memory_limit: "2g"
  container_cpu_limit: "1.0"

# Security settings
security:
  api_key_required: false
  encryption_enabled: false
  command_validation: true
  container_isolation: true
  attack_simulation_mode: true

# Logging settings
logging:
  level: INFO
  file: codegrey-agent.log
  max_size_mb: 100
  backup_count: 5
  container_logs: true
  attack_execution_logs: true
  golden_image_logs: true

# Development and testing
development:
  mock_data_enabled: false
  test_mode: false
  debug_networking: false
  simulate_threats: true
  container_debug: false

